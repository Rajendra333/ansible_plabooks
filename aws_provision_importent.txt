add domain
----------------
---
- hosts: windows2
  gather_facts: no
  tasks:
    - name: add to domain
      win_domain_membership:
        dns_domain_name: ansible.com
        hostname: EC2AMAZ-PQT2BCA
        domain_admin_user: admin@ansible.com
        domain_admin_password: password@123
        domain_ou_path: "OU=Windows,OU=Servers,DC=ansible,DC=com"
        state: domain
      register: domain_state
    - win_reboot:
      when: domain_state.reboot_required
----------------------------------------------
add_volumes
------------------------
---
- hosts: localhost
  connection: local
  gather_facts: no
  vars_prompt:
    - name: instances
      prompt: Give instnace_id
      private: no
    - name: volume
      prompt: Give Volume_size
      private: no
  tasks:
    - name: add volume
      ec2_vol:
        instance: "{{ instances }}"
        region: us-east-2
        volume_size: "{{ volume }}"
        volume_type: gp2
        device_name: /dev/xvdf
      register: vol
----------------------------------------
add unallocated volumes to windows host
--------------------------
---
- hosts: windows2
  gather_facts: no
  tasks:
    - name: add unallocatedd volumes
      parted: device=/dev/xvdf unit=GiB
      register: info
----------------------------------
create windows instances in aws
----------------------------
---
- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Setting up Security/Firewall Group
      ec2_group:
         name: MY_AWS_Security_Grp
         description: Rules Allowing Traffic on port 22 and 80
         region: us-east-2
         rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
         rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Provision a EC2 Instance
      ec2:
         key_name: New_Key
         region: us-east-2
         instance_type: t2.micro
         image: ami-08b4a0f6e106c1dba
         wait: yes
         wait_timeout: 500
         count: 1
         instance_tags:
           Name: Aws_instances
           Owner: LTI
         volumes:
          - device_name: /dev/xvdb
            volume_type: gp2
            volume_size: 2
         monitoring: no
         vpc_subnet_id: subnet-6253932e
         assign_public_ip: yes
         group: MY_AWS_Security_Grp
      register: ec2_out
--------------------------------------------
delete volumes
-------------
---
- hosts: localhost
  gather_facts: no
  connection: local
  vars_prompt:
    - name: volume_id
      prompt: give volume_id
      private: no
  tasks:
    - name: Detach volume
      ec2_vol:
        id: "{{ volume_id }}"
        region: us-east-2
        instance: None
    - name: delete volume
      ec2_vol:
        id: "{{ volume_id }}"
        region: us-east-2
        state: absent
      register: del
--------------------------------
create windows host as domain controller 
-----------------
---
- hosts: windows
  gather_facts: no
  tasks:
    - name : create a domain
      win_domain_controller:
        dns_domain_name: ansible.com
        domain_admin_user: admin@ansible.com
        domain_admin_password: server@12345
        safe_mode_password: server@12345
        state: domain_controller
        log_path: C:\ansible_win_domain_controller.txt
      register: domain_result
-----------------------------------
create instances
------------------
---
- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Setting up Security/Firewall Group
      ec2_group:
         name: MY_AWS_Security_Grp
         description: Rules Allowing Traffic on port 22 and 80
         region: us-east-2
         rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
         rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Provision a EC2 Instance
      ec2:
         key_name: New_Key
         region: us-east-2
         instance_type: t2.micro
         image: ami-0b500ef59d8335eee
         wait: yes
         wait_timeout: 500
         count: 1
         instance_tags:
           Name: Aws_instances
           Owner: lakshman
         volumes:
          - device_name: /dev/xvdb
            volume_type: gp2
            volume_size: 2
         monitoring: no
         vpc_subnet_id: subnet-6253932e
         assign_public_ip: yes
         group: MY_AWS_Security_Grp
      register: ec2_out
-----------------------------------------------
create keypair
------------
---
- hosts: localhost
  connection: local
  gather_facts: no
  tasks:

      - name: Create a new EC2 key
        ec2_key:
            name: newone
            region: us-east-2
        register: ec2_key_result

---------------
create domain controller
------------------
---
- hosts: windows2
  gather_facts: no
  tasks:
    - name:  domain controller
      win_domain_controller:
        dns_domain_name: ansible.com
        domain_admin_user: admin@ansible.com
        domain_admin_password: password@123
        safe_mode_password: password@123
        domain_ou_path: "OU=Windows,OU=Servers,DC=ansible,DC=com"
        state: domain_controller
        log_path: C:\ansible_win_domain_controller.txt
      register: domain_state
--------------------------------------------
terminate instances
--------------------
---
- hosts: localhost
  gather_facts: no
  connection: local
  vars_prompt:
    - name: image_id
      prompt: Give image_id for terminate
      private: no
  tasks:
    - name: terminatate  instance
      ec2:
        state='absent'
        region=us-east-2
        instance_ids={{ image_id }}
---------------------------------------------
add unallocate volumes to drive
----------------------
---
- hosts: windows2
  gather_facts: no
  tasks:
    - name: creation
      win_partition:
         drive_letter: D
         partition_size: 10 GiB
         disk_number: 1
      register: info
    - name: resize
      win_partition:
         drive_letter: E
         partition_size: -1
         partition_number: 1
         disk_number: 1
      register: nefw
--------------------------
add user to domain group
-----------------------------
---
- hosts: windows2
  tasks:
  - name: Domain User
    win_domain_user:
      name: bob
      upn: bob@ansible.com
      password: password@123
      state: present
      ou: OU=windows,DC=ansible DC=com
      account_enabled: true
      fullname: bob jones
      description: Normal user
      user_cannot_change_password: no
      password_never_expires: yes
      groups: serveradmin
      groups_action: add
----------------------------------
create windows instances in aws
-------------------------------
---
- hosts: localhost
  gather_facts: False
  connection: local
  vars_prompt:
    - name: image
      prompt: enter image_id
      private: no
  vars:
    keypair: aws
    instance_type: t2.micro
    security_group: MY_AWS_Security_Grp
    region: us-east-2
    vpc: subnet-41920a3b
    amount: 1
    tagname2: windows
  tasks:
    - name: Launch instance
      ec2:
         key_name: "{{ keypair }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         instance_tags:
           Name: "{{ tagname2 }}"
         image: "{{ image }}"
         state: present
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: "{{ vpc }}"
         assign_public_ip: yes
         count: "{{ amount }}"
         count_tag: Name
      register: ec2
    - name: Add new instance to host group
      add_host: hostname="{{ item.public_ip }}" groupname=windows
      with_items: '{{ec2.instances}}'
    - name: Get the win password
      ec2_win_password:
           profile: dev
           instance_id: "{{ item.id }}"
           region: "{{ region }}"
           key_file: "~/.ssh/aws.pem"
           wait: yes
           wait_timeout: 120
      with_items:
           - "{{ ec2.tagged_instances }}"
      register: password
----------------
get win_password after creating windows host in aws
--------------------
- hosts: 52.15.144.229
  gather_facts: false
  tasks:
    - name: Get the win password
      ec2_win_password:
        profile: dev
        instance_id: i-0fa0cd7fcafa1a543
        region: us-east-2
        key_file: "~/.ssh/aws.pem"
        wait: yes
        wait_timeout: 120

-----------------------------------
